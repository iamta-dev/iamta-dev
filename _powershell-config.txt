Invoke-Expression (&starship init powershell)

Import-Module Get-ChildItemColor
If (-Not (Test-Path Variable:PSise)) {  # Only run this in the console and not in the ISE
    Import-Module Get-ChildItemColor
    
    Set-Alias l Get-ChildItem -option AllScope
    Set-Alias ls Get-ChildItemColorFormatWide -option AllScope
}

Import-Module PSReadLine

# Shows navigable menu of all options when hitting Tab
Set-PSReadLineKeyHandler -Key Tab -Function MenuComplete

# Autocompleteion for Arrow keys
Set-PSReadLineOption -HistorySearchCursorMovesToEnd
Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward
Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward

Set-PSReadLineOption -ShowToolTips
Set-PSReadLineOption -PredictionSource History

# Set the color for Prediction (auto-suggestion)
Set-PSReadLineOption -Colors @{InlinePrediction = "DarkGreen"}

# Set abbr
function open {explorer .}
function ws {Set-Location C:\Users\taZgg\workspace}
function pea {Set-Location C:\Users\taZgg\pea}
function vas {Set-Location C:\Users\taZgg\pea\vas-pea}
function vis {Set-Location C:\Users\taZgg\pea\vis-pea-api}
function gga {git add .}
function ggp {git push}
function ggu {git pull}
function ggc ([string]$msg)
{
    git commit -m "${msg}"
}
function ggs {git status}
function ggb {git branch}
function ggl {git log --graph}
function ggb-d 
{
    echo 'git branch | grep -v "master" | xargs git branch -D'  
    git branch | grep -v "master" | xargs git branch -D
}
function gg-rs 
{
    echo 'git reset --hard'  
    git reset --hard 
}
function ggfo 
{
    echo 'git fetch origin'  
    git fetch origin 
}
function ggmo 
{
    echo 'git merge origin/develop --no-ff'  
    git merge origin/develop --no-ff
}

function ddd 
{
    echo 'docker-compose -f .\docker-compose.db.yml down'  
    docker-compose -f .\docker-compose.db.yml down
}
function ddu 
{
    echo 'docker-compose -f .\docker-compose.db.yml up -d'  
    docker-compose -f .\docker-compose.db.yml up -d
}
